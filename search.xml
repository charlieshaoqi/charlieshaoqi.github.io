<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>发布第一篇个人博客</title>
    <url>/posts/387162d6.html</url>
    <content><![CDATA[<h2 id="我终于做出了这个！！！！"><a href="#我终于做出了这个！！！！" class="headerlink" title="我终于做出了这个！！！！"></a>我终于做出了这个！！！！</h2><p>（没什么可以写的。。。）</p>
<p>如果你也想做一个像这样的个人博客，你可以参考以下网址：</p>
<p>参考网址：</p>
<p><a href="https://hexo.io/zh-cn/docs/index.html">https://hexo.io/zh-cn/docs/index.html</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/114195340">https://zhuanlan.zhihu.com/p/114195340</a></p>
<p><a href="https://charlieshaoqi.github.io/">https://charlieshaoqi.github.io/</a></p>
]]></content>
      <categories>
        <category>网页</category>
      </categories>
      <tags>
        <tag>原创</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用Hexo+Github Page搭建免费博客</title>
    <url>/posts/d2331b68.html</url>
    <content><![CDATA[<h2 id="一、了解Hexo"><a href="#一、了解Hexo" class="headerlink" title="一、了解Hexo"></a>一、了解Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>（好吧，Hexo官网是这么讲的）  </p>
<p>它是个非常不错博客框架，有很多好看的主题可以应用在自己的博客上，这篇文章要讲述如何用hexo写博客并部署到github上就好了。</p>
<p>如果你已经用hexo写了博客并部署到github上了，就不要再看这篇文章了，快去 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 寻找好看的、心仪的主题吧！！！</p>
<h2 id="二、配置需要的环境"><a href="#二、配置需要的环境" class="headerlink" title="二、配置需要的环境"></a>二、配置需要的环境</h2><h3 id="先安装Node-js："><a href="#先安装Node-js：" class="headerlink" title="先安装Node.js："></a>先安装Node.js：</h3><p><a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a><br>Windows&#x2F;Macos&#x2F;Linux都兼容，下载好了后请自行根据提示安装。</p>
<h3 id="安装git："><a href="#安装git：" class="headerlink" title="安装git："></a>安装git：</h3><p>Macos（好像有自带的，不过版本较低，建议重新安装）:<br><a href="https://sourceforge.net/projects/git-osx-installer/">https://sourceforge.net/projects/git-osx-installer/</a></p>
<p>Windows（请自行查看安装）:<br><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p>Linux and Unix（请自行查看安装）：<br><a href="https://git-scm.com/download/linux">https://git-scm.com/download/linux</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo:"></a>安装Hexo:</h3><p>官网给的是这条命令：<br><code>npm install -g hexo-cli</code>    </p>
<p>Mac用户注意了，要使用管理员权限，首先：“sudo -s”，回车，输入密码，再回车，然后：<br><code>npm install -g hexo-cli</code><br>回车，等待下载安装即可！<br>不过，作为熟悉 npm 的进阶用户，我仅局部安装 hexo 包。用这条命令:<br><code>npm install hexo</code>  </p>
<h2 id="三、使用Hexo搭建博客"><a href="#三、使用Hexo搭建博客" class="headerlink" title="三、使用Hexo搭建博客"></a>三、使用Hexo搭建博客</h2><p>1、在桌面新建一个空文件夹blog（因为我早就自己搭建过一个名字一样，所以使用blog2演示）<br><img src="/images/blog2.png" alt="blog"></p>
<p>2、使用Hexo生成博客，初始化一个博客：<br>首先进入blog文件夹：<br><code>npx hexo init</code><br><img src="/images/hexo_init.png" alt="初始化"><br><img src="/images/hexo.png" alt="文件夹"></p>
<p>3、启动hexo：<br><code>npx hexo s</code></p>
<p>由于我之前搭建过，所以提示4000端口被占用：<br><img src="/images/port_4000_error.png" alt="端口占用">  </p>
<p>遇到这种情况不要着急，去网上找到了方法：</p>
<p>解决方法如下：<br><code>sudo lsof -i:4000</code>，查看被占用进程的pid<br>再输<code>sudo kill -9 pid</code> （pid为上一步相应查看到的）<br>然后再继续<code>npx hexo s</code>，则成功。<br><img src="/images/port_4000_error%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.png" alt="端口占用解决方法"></p>
<p>在浏览器输入：<a href="http://localhost:4000，可查看到默认生成了一篇博文：">http://localhost:4000，可查看到默认生成了一篇博文：</a><br><img src="/images/%E5%88%9D%E5%A7%8B.png" alt=" ">  </p>
<p>4、如何新建一篇博文？</p>
<p>control+c断开刚刚的链接，新建一篇博文：<br><code>npx hexo n &quot;发布第一篇个人博客&quot;</code><br><img src="/images/%E6%96%B0%E5%BB%BA%E5%8D%9A%E6%96%87.png" alt="新建博文"></p>
<p>5、更改博文内容：  </p>
<p>接下来就是更改博文内容，我直接使用Visual Studio Code打开文章了，找到<code>~/Desktop/blog/source/_posts</code>，里面有你创建的文章，直接做修改即可，不熟悉MarkDown格式的可以看看这个网站：<br><a href="https://www.runoob.com/markdown/md-tutorial.html">https://www.runoob.com/markdown/md-tutorial.html</a><br>（不难，现在我就在写这玩意）<br>顺便附上一张Visual Studio Code的图，超好用。<br><img src="/images/Visual_Studio_Code.png" alt="Visual Studio Code"></p>
<p>6、同样在blog2文件下：<br>清理public文件夹：<code>npx hexo clean</code><br>生成：<code>npx hexo g</code><br>启动：<code>npx hexo s</code><br><img src="/images/%E6%9B%B4%E6%96%B0.png" alt=" "><br>刷新<a href="http://localhost:4000/%E5%88%99%E7%9C%8B%E5%88%B0%EF%BC%8C%E5%86%85%E5%AE%B9%E5%B7%B2%E7%BB%8F%E6%9B%B4%E6%96%B0%E4%B8%8A%E5%8E%BB%E4%BA%86%EF%BC%9A">http://localhost:4000/则看到，内容已经更新上去了：</a><br><img src="/images/%E5%B7%B2%E6%9B%B4%E6%96%B0.png" alt=" "></p>
<h2 id="四、部署至github"><a href="#四、部署至github" class="headerlink" title="四、部署至github"></a>四、部署至github</h2><p>如果你想让别人也能访问到（废话），那么免费的方法就是把网站部署至github。</p>
<p>1、登录github：<br><a href="https://github.com/">https://github.com/</a><br>没账号的新建一个（这个我不用教了吧），新创建一个仓库：<br><img src="/images/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt=" "><br>仓库名必须为：<code>昵称.github.io</code>，输入描述（也可以不输），创建（记得选公开）：<br><img src="/images/%E4%BB%93%E5%BA%93%E9%80%89%E6%8B%A9.png" alt=" "><br>（因为不能重名，而且我已经有了，所以有红色感叹号，你们不会）</p>
<p>2、命令行下，ctrl+c，退出命令。还是在blog2目录下，安装git部署插件<br><code>npm install hexo-deployer-git --save</code><br><img src="/images/%E5%AE%89%E8%A3%85git%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6.png" alt=" "></p>
<p>3、更改blog2文件夹根目录下，_config.yml的配置：<br><img src="/images/%E8%A6%81%E6%9B%BF%E6%8D%A2%E7%9A%84%E8%AE%BE%E7%BD%AE.png" alt="要被替换的设置"><br>把这些替换为：  </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:yourname/yourname.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="string">```</span>   </span><br><span class="line"><span class="string">记得把yourname替换成你的昵称。</span>  </span><br><span class="line"><span class="number">4</span><span class="string">、设置SSH密钥：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Mac:  </span></span><br><span class="line"><span class="string">首先检测自己电脑是否存在</span> <span class="string">SSH</span> <span class="string">key：</span>  </span><br><span class="line"><span class="string">在生成SSH密钥之前，您可以检查是否有任何现有的SSH密钥。</span>  </span><br><span class="line"><span class="number">1</span><span class="string">、打开终端</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span><span class="string">、输入ls</span> <span class="string">-al</span> <span class="string">~/.ssh以查看是否存在现有SSH密钥：</span>  </span><br><span class="line"><span class="string">```sh</span></span><br><span class="line"><span class="string">ls</span> <span class="string">-al</span> <span class="string">~/.ssh</span></span><br><span class="line"><span class="comment"># 列出.ssh目录中的文件(如果存在的话)</span></span><br><span class="line"><span class="string">```</span>  </span><br><span class="line"><span class="number">3</span><span class="string">、检查目录列表以查看您是否已拥有公共SSH密钥。</span>  </span><br><span class="line"><span class="string">·如果你本地没有生成的话</span>  </span><br><span class="line">  <span class="string">终端上面会显示：No</span> <span class="string">such</span> <span class="string">file</span> <span class="string">or</span> <span class="string">directory</span></span><br><span class="line"></span><br><span class="line"><span class="string">·如果已经存在的话</span>  </span><br><span class="line">  <span class="string">则会显示</span> <span class="string">id_rsa</span> <span class="string">和</span> <span class="string">id_rsa.pub</span></span><br><span class="line"></span><br><span class="line"><span class="string">如果本地没有的话，我们要自己生成新的SSH秘钥（如果存在，请跳过这步）</span>  </span><br><span class="line"><span class="number">1</span><span class="string">）在终端输入下面的命令，记得替换您的GitHub电子邮件地址,这将使用提供的电子邮件作为标签创建一个新的ssh密钥。</span></span><br><span class="line">  </span><br><span class="line"><span class="string">```sh</span></span><br><span class="line"><span class="string">ssh-keygen</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">-b</span> <span class="number">4096</span> <span class="string">-C</span> <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"><span class="comment">#&quot;your_email@example.com&quot;为示例邮箱，此处应填写为你在github上面注册的邮箱。</span></span><br><span class="line"><span class="string">```</span>  </span><br><span class="line"><span class="string">显示：</span></span><br></pre></td></tr></table></figure>
<p>Generating public&#x2F;private rsa key pair.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2）当系统提示您“输入要保存密钥的文件”时，按Enter键使用默认文件位置。  </span><br></pre></td></tr></table></figure>
<p>Enter a file in which to save the key (&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa): [Press enter]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3）在提示符下，键入安全密码（强烈不建议设置密码，否则你上传一次就要输一次，特别麻烦。。。）。可以连续Enter，不设置密码。  </span><br></pre></td></tr></table></figure>
<p>Enter passphrase (empty for no passphrase): [Type a passphrase]<br>Enter same passphrase again: [Type passphrase again]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">成功后，终端显示：  </span><br></pre></td></tr></table></figure>
<p>Your identitification has been saved in &#x2F;Users&#x2F;xxx&#x2F;.ssh&#x2F;id_rsa.<br>Your public key has been saved in &#x2F;user&#x2F;xxx&#x2F;id_rsa.pub.<br>the key fingerprint is xxxxxxxxxx…….xxxxxxxx <a href="mailto:&#x79;&#x6f;&#x75;&#114;&#x5f;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109;">&#x79;&#x6f;&#x75;&#114;&#x5f;&#101;&#109;&#97;&#x69;&#x6c;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109;</a><br>The key’s randomart image is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![ ](/images/ssh生成.jpg)</span><br><span class="line"></span><br><span class="line">1、将SSH密钥添加到ssh-agent  </span><br><span class="line">1）在后台启动ssh-agent  </span><br><span class="line">`eval &quot;$(ssh-agent -s)&quot;`</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Agent pid 59566</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">终端输入命令：  </span><br><span class="line">`ssh-add -K ~/.ssh/id_rsa`</span><br><span class="line"></span><br><span class="line">如果设置密码，此时会要求输入passphrase（输入步骤二中的passphrase就好）  </span><br><span class="line">成功后，终端显示：</span><br></pre></td></tr></table></figure>
<p>Identity added: &#x2F;Users&#x2F;xxx&#x2F;.ssh&#x2F;id_rsa (<a href="mailto:&#121;&#x6f;&#x75;&#x72;&#95;&#x65;&#x6d;&#97;&#105;&#108;&#x40;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#46;&#99;&#111;&#x6d;">&#121;&#x6f;&#x75;&#x72;&#95;&#x65;&#x6d;&#97;&#105;&#108;&#x40;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#46;&#99;&#111;&#x6d;</a>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2、添加SSH key 到Github 上</span><br><span class="line">1）将SSH密钥复制到剪贴板。</span><br><span class="line"></span><br><span class="line">`pbcopy &lt; ~/.ssh/id_rsa.pub`  </span><br><span class="line">复制id_rsa.pub的内容到剪贴板</span><br><span class="line">提示：如果pbcopy不起作用，您可以找到隐藏.ssh文件夹，在文本编辑器中打开id_rsa.pub文件，然后将文件内容复制到剪贴板。</span><br><span class="line"></span><br><span class="line">2）打开Github,在任意页面的右上角，单击您的个人资料照片，然后单击“Settings”。</span><br><span class="line">![ ](/images/settings.jpg)</span><br><span class="line"></span><br><span class="line">在用户设置侧栏中，单击“SSH and GPG keys”。  </span><br><span class="line">![ ](/images/用户设置.jpg)</span><br><span class="line"></span><br><span class="line">单击“ New SSH key”  </span><br><span class="line">![ ](/images/New_SSH_key.jpg)</span><br><span class="line"></span><br><span class="line">在“Title”字段中添加描述性标签，Key字段中粘贴您复制的id_rsa.pub内容。最后点击“Add SSH key”  </span><br><span class="line">![ ](/images/ssh.jpg)</span><br><span class="line"></span><br><span class="line">最后请确认您的GitHub密码。  </span><br><span class="line">![ ](/images/ssh_.jpg)</span><br><span class="line"></span><br><span class="line">如何检测SSH key</span><br><span class="line">终端输入命令：  </span><br><span class="line">`ssh git@github.com`</span><br><span class="line"></span><br><span class="line">验证SSH key是否有权限访问 你的 github，输入“yes”</span><br></pre></td></tr></table></figure>
<p>The authenticity of host ‘github.com (13.250.177.223)’ can’t be established.<br>RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.<br>Are you sure you want to continue connecting (yes&#x2F;no)? yes</p>
<p>&#96;&#96;&#96;<br>成功会显示为</p>
<p>Hi you name! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>原创</tag>
      </tags>
  </entry>
</search>
